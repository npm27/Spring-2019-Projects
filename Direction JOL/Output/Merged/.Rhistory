source("cleanup.R")
library(ggplot2) ##for graphs
source("cleanup.R")
library(ez)
summary(dat)
dat$Recall = dat$Recall * 100
summary(dat)
length(dat$Subject)
View(dat)
length(unique(unlist(dat[c("Subject")])))
summary(dat)
tapply(dat$Jol,
dat$Direction, mean)
tapply(dat$Jol,
dat$Direction, sd)
tapply(dat$Recall,
dat$Direction, mean)
tapply(dat$Recall,
dat$Direction, sd)
ezANOVA(data = dat, ##declare data set being used
wid = Subject, ##subject ID
within = Direction, ##grouping variable
dv = Recall,
type = 3)
options(scipen = 999)
ezANOVA(data = dat, ##declare data set being used
wid = Subject, ##subject ID
within = Direction, ##grouping variable
dv = Recall,
type = 3)
ezANOVA(data = dat, ##declare data set being used
wid = Subject, ##subject ID
within = Direction, ##grouping variable
dv = Jol,
type = 3)
long.dat = melt(dat, id = c("Subject", "condition",
"ListNum", "direction",  "cue_target")
summary(long.dat)
colnames(long.dat)[11] = "Task"
colnames(long.dat)[12] = "Score"
####make a bar chart####
bar1 = ggplot(dat, aes(direction, Score, fill = Task)) ##creates a blank plot object
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("JOL" = "indianred4",
"Recall.Correct" = "dimgray")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance") +
#ylim(0,100) +
labs(title="All Blocks")
bar1
long.dat = melt(dat, id = c("Subject", "condition",
"ListNum", "direction",  "cue_target")
long.dat = melt(dat, id = c("Subject", "condition",
"ListNum", "direction",  "cue_target"))
library(reshape)
long.dat = melt(dat, id = c("Subject", "condition",
"ListNum", "direction",  "cue_target"))
long.dat = melt(dat, id = c("Subject", "Condition",
"ListNum", "Direction"))
View(long.dat)
summary(long.dat)
colnames(long.dat)[5] = "Task"
colnames(long.dat)[6] = "Score"
bar1 = ggplot(long.dat, aes(Direction, Score, fill = Task)) ##creates a blank plot object
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("JOL" = "indianred4",
"Recall" = "dimgray")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "indianred4",
"Recall" = "dimgray")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "indianred4",
"Recall" = "dodgerblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "green",
"Recall" = "dodgerblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
pairwise.t.test(dat$Jol, dat$Direction, ##significant difference between Unrelated pairs and related pairs
paired = F)
pairwise.t.test(dat$Jol, dat$Direction, ##significant difference between Unrelated pairs and related pairs
paired = F,
p.adjust.method = "bonferroni")
ezANOVA(data = long.dat,
dv = Score,
within = Task,
wid = Subject,
detailed = T,
type = 3)
35.52-25
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "dodgerblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "lightskyblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "deepskyblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "blue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "dodgerblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
ezANOVA(data = long.dat,
dv = Score,
within = Task,
wid = Subject,
detailed = T,
type = 3)
setwd("~/GitHub/Spring-2019-Projects/Direction JOL/Output/Merged")
dat = read.csv("ex2 final output.csv")
library(ggplot2)
library(reshape)
dat$Scored_Response = (dat$Scored_Response * 100)
dat$Jol_Response[dat$Jol_Response > 100] = NA
summary(dat$Subject) #n = 27
summary(dat)
nomissing = na.omit(dat)
tapply(nomissing$Jol_Response,
nomissing$Direction, mean)
tapply(nomissing$Jol_Response,
nomissing$Direction, sd)
tapply(nomissing$Scored_Response,
nomissing$Direction, mean)
tapply(nomissing$Scored_Response,
nomissing$Direction, sd)
long.dat = melt(nomissing, id = c("Subject", "Block",
"ListNum", "Direction", "ExperimentName", "cue_target",
"recall_response", "cue_prompt"))
View(nomissing)
colnames(nomissing)[6] == "Jol"
colnames(nomissing)[8] == "Recall"
colnames(nomissing)[6] = "Jol"
colnames(nomissing)[8] = "Recall"
##set up
dat = read.csv("ex2 final output.csv")
library(ggplot2)
library(reshape)
##put recall on correct scale
dat$Scored_Response = (dat$Scored_Response * 100)
##remove out of range scores
dat$Jol_Response[dat$Jol_Response > 100] = NA
##get sample size
summary(dat$Subject) #n = 27
summary(dat)
##remove missing
nomissing = na.omit(dat)
##get descriptives
tapply(nomissing$Jol_Response,
nomissing$Direction, mean)
tapply(nomissing$Jol_Response,
nomissing$Direction, sd)
tapply(nomissing$Scored_Response,
nomissing$Direction, mean)
tapply(nomissing$Scored_Response,
nomissing$Direction, sd)
##fix column names
colnames(nomissing)[6] = "Jol"
colnames(nomissing)[9] = "Recall"
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "dodgerblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance") +
ylim(0,100)
long.dat = melt(nomissing, id = c("Subject", "Block",
"ListNum", "Direction", "ExperimentName", "cue_target",
"recall_response", "cue_prompt"))
summary(long.dat)
colnames(long.dat)[9] = "Task"
colnames(long.dat)[10] = "Score"
cleanup = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "white"),
text = element_text(size = 15))
bar1 = ggplot(long.dat, aes(Direction, Score, fill = Task))
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "dodgerblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance") +
ylim(0,100)
bar1
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "dodgerblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance") +
#ylim(0,100)
#labs(title="All Blocks")
bar1
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "dodgerblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
bar1
##set up
dat = read.csv("ex2 final output.csv")
library(ggplot2)
library(reshape)
##put recall on correct scale
dat$Scored_Response = (dat$Scored_Response * 100)
##remove out of range scores
dat$Jol_Response[dat$Jol_Response > 100] = NA
##get sample size
summary(dat$Subject) #n = 27
summary(dat)
##remove missing
nomissing = na.omit(dat)
##get descriptives
tapply(nomissing$Jol_Response,
nomissing$Direction, mean)
tapply(nomissing$Jol_Response,
nomissing$Direction, sd)
tapply(nomissing$Scored_Response,
nomissing$Direction, mean)
tapply(nomissing$Scored_Response,
nomissing$Direction, sd)
##fix column names
colnames(nomissing)[6] = "Jol"
colnames(nomissing)[9] = "Recall"
####make the graph####
##melt the data
long.dat = melt(nomissing, id = c("Subject", "Block",
"ListNum", "Direction", "ExperimentName", "cue_target",
"recall_response", "cue_prompt"))
summary(long.dat)
colnames(long.dat)[9] = "Task"
colnames(long.dat)[10] = "Score"
cleanup = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "white"),
text = element_text(size = 15))
bar1 = ggplot(long.dat, aes(Direction, Score, fill = Task))
bar1 = bar1 +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge",
color = "Black") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2,
color = "black") +
scale_fill_manual("Task",
values = c("Jol" = "midnightblue",
"Recall" = "dodgerblue")) +
cleanup +
xlab("Direction") +
ylab("Mean Task Performance")
#ylim(0,100)
#labs(title="All Blocks")
bar1
##get means
tapply(nomissing$Scored_Response,
nomissing$Direction, mean)
tapply(nomissing$Scored_Response,
nomissing$Direction, sd)
tapply(nomissing$Jol_Response,
nomissing$Direction, mean)
tapply(nomissing$Jol_Response,
nomissing$Direction, sd)
tapply(dat$Scored_Response, nomissing$Direction, length)
tapply(nomissing$Jol_Response, nomissing$Direction, length)
##run the ANOVAS
library(ez)
##recall
ezANOVA(data = nomissing,
wid = Subject,
within = Direction,
dv = Scored_Response,
type = 3)
##JOL
ezANOVA(data = nomissing,
wid = Subject,
within = Direction,
dv = Jol_Response,
type = 3)
##do post hocs
##Recall
pairwise.t.test(nomissing$Scored_Response, nomissing$Direction,
paired = F)
##JOL
pairwise.t.test(nomissing$Jol_Response, nomissing$Direction,
paired = F)
##get effect sizes
library(MOTE)
####Cohen's D for posthocs####
##JOL
##F & B
jfb = d.dep.t.avg(62.24917, 58.27500, 32.40954, 32.93337, 880, a = .05)  #d = .12
jfb.d = round(jfb$d, digits = 2)
##F & S
jfs = d.dep.t.avg(62.24917, 66.42011, 32.40954, 32.30136, 880, a = .05) #d = -.13
jfs.d = round(jfs$d, digits = 2)
##F & U
jfu = d.dep.t.avg(62.24917, 22.09742, 32.40954, 24.82979, 880, a = .05) #d = 1.4
jfu.d = round(jfu$d, digits = 2)
##B & S
jbs = d.dep.t.avg(58.27500, 66.42011, 32.93337, 32.30136, 880, a = .05) #d = -.25
jbs.d = round(jbs$d, digits = 2)
##B & U
jbu = d.dep.t.avg(58.27500, 22.09742, 32.93337, 24.82979, 880, a = .05) #d = 1.25
jbu.d = round(jbu$d, digits = 2)
##S & U
jsu = d.dep.t.avg(66.42011, 22.09742, 32.30136, 24.82979, 880, a = .05) #d = 1.55
jsu.d = round(jsu$d, digits = 2)
##Recall
##F & B
rfb = d.dep.t.avg(67.55260, 31.47727, 46.84374, 46.46894, 1080, a = .05) #d = .77
rfb.d = round(rfb$d, digits = 2)
##F & S
rfs = d.dep.t.avg(67.55260, 60.44693, 46.84374, 48.92378, 880, a = .05) #d = .15
rfs.d = round(rfs$d, digits = 2)
##F & U
rfu = d.dep.t.avg(67.55260, 10.92593, 46.84374, 31.21087, 880, a = .05) #d = 1.45
rfu.d = round(rfu$d, digits = 2)
##B & S
rbs = d.dep.t.avg(31.47727, 60.44693, 46.46894, 48.92378, 880, a = .05) #d = -.61
rbs.d = round(rbs$d, digits = 2)
##B & U
rbu = d.dep.t.avg(31.47727, 12.31803, 46.46894, 32.88282, 880, a = .05) #d = .48
rbu.d = round(rbu$d, digits = 2)
##S & U
rsu = d.dep.t.avg(60.44693, 12.31803, 48.92378, 32.88282, 880, a = .05) #d = 1.18
rsu.d = round(rsu$d, digits = 2)
